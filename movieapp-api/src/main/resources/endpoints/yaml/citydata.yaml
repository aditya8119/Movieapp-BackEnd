swagger: '2.0'
info:
  title: Cities Data API
  version: 1.0.0
  description: >
    ## API of City Data Services


    This specification describes the endpoints, request/response model of the Cities Data API.
    This API provides REST resources to manage cities of Movies application.


    The resources should only be used over HTTPS (SSL) and can be accessed via the following base URL:


    ```
      https://localhost:8080/api/v1/
    ```


    ## API usage guidelines


    This section describes general rules and guidelines for using REST based
    services offered by Movies Application.

      * All resources can only be accessed via HTTPS and a respective HTTP Basic Authentication header is also required.
      * Movies Application reserves the right to add new parameters without further notice (in request and response).
      * Movies Application reserves the right to add new error codes without further notice. Movies Application will thereby stick to the HTTP STATUS CODES as defined by W3C.
      * Movies Application reserves the right to enhance enumerations by new values.
      * Movies Application reserves the right to increase the "maxItem" settings of arrays without further notice.
      
    Each consumer needs to tolerant about changes to the API as much as possible ([see Tolerant Reader Pattern](http://martinfowler.com/bliki/TolerantReader.html))


    ## Business definitions

    Cities Data APIs can be used to list cities present in the database.

    ## Release Notes 

    ### 1.0.0

    * Initial version

host: localhost:8080
schemes:
  - http
  - https
basePath: /api/v1
tags:
  - name: 'API#008 Cities'
    description: >-
      All operations marked with 'API#008 Cities' are relevant to city data use case

paths:
  /genres:

    get:
       operationId: getCities
       tags:
         - 'API#008 Cities'
       summary: City Data Services - Get all cities
       description: >
         API to get all cities of Movies application
       produces:
         - application/json
       parameters:
         - in: query
           name: page
           type: integer
           required: false
           description: query to set the position of the records to be fetched from
         - in: query
           name: limit
           type: integer
           required: false
           description: query to limit the number of records per fetch
       responses:
         '200':
           description: OK - Fetched all genres
           headers:
             request-id:
               type: string
               description: Used as correlation id while tracing for the request in the backend
           schema:
             $ref: '#/definitions/CitiesSummaryResponse'
         '400':
            description: >-
              BAD REQUEST - server cannot or will not process the request due to something that is perceived to be a
              client error (e.g., malformed request syntax, mandatory elements are missing)
            headers:
              request-id:
                type: string
                description: Used as correlation id while tracing for the request in the backend
         '401':
            description: UNAUTHORIZED - user has provided wrong credentials
            headers:
              request-id:
                type: string
                description: Used as correlation id while tracing for the request in the backend
         '403':
            description: >-
              FORBIDDEN - request has not been applied because client application has no permission to perform action
            headers:
              request-id:
                type: string
                description: Used as correlation id while tracing for the request in the backend
         '422':
            description: >-
              UNPROCESSABLE ENTITY - request was well-formed but server unable to process due to semantic errors
            headers:
              request-id:
                type: string
                description: Used as correlation id while tracing for the request in the backend
            schema:
              $ref: '#/definitions/ErrorResponse'
         '500':
            description: >-
              INTERNAL SERVER ERROR - server encountered an unexpected condition that prevented it from fulfilling the request.
            headers:
              request-id:
                type: string
                description: Used as correlation id while tracing for the request in the backend


definitions:

  CitiesSummaryResponse:
    type: object
    properties:
      total_count:
        type: integer
        description: total number of cities present in the database
      cities:
        type: array
        items:
          type: object
          $ref: '#/definitions/CityType'
        description: List of cities
    required:
      - total_count
      - cities
    example:
      total_count: 2
      cities:
        - code: BLR
          name: Bengaluru
        - code: MUM
          name: Mumbai

  CityType:
    type: object
    properties:
      code:
        type: string
        description: City code
      name:
        type: string
        description: City name

  ErrorResponse:
    type: object
    properties:
      code:
        type: string
        description: Application specific standard error code
      message:
        type: string
        description: Error message stating the reason
      root_cause:
        type: string
        description: Root cause of the Error
    required:
      - code
      - message
    example:
      code: GEN-001
      message: An unexpected error occurred. Please contact System Administrator